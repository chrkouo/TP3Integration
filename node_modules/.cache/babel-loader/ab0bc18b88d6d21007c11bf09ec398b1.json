{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1834343\\\\Downloads\\\\TP3\\\\tpfinal_backend-frontend\\\\frontend\\\\frontend_tpfinal\\\\src\\\\Places\\\\Main\\\\Quests.js\",\n    _s2 = $RefreshSig$();\n\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect } from \"react\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport Button from \"@mui/material/Button\";\nimport { collection, query, orderBy, onSnapshot, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quests(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    name,\n    completed,\n    userId\n  } = _ref;\n  const [checked, setChecked] = useState(completed);\n  const label = {\n    inputProps: {\n      'aria-label': 'Checkbox demo'\n    }\n  };\n  const [quest, setQuest] = useState([]); // const f = async () => {\n  //   try {\n  //     const questRequest = await axios({\n  //       method: \"get\",\n  //       url: \"http://localhost:3001/quests\",\n  //       headers: {\n  //         Authorization: \"BEARER \" + token,\n  //       },\n  //     });\n  //     setQuest(questRequest.data);\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // };\n  // f();\n\n  const handleChange = async () => {\n    const taskDocRef = doc(db, \"adventurerDB/quests\", userId);\n\n    try {\n      await updateDoc(taskDocRef, {\n        completed: checked\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    const taskDocRef = doc(db, \"adventurerDB/quests\", userId);\n\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const HandleSubmit = () => {\n    _s();\n\n    // questId = id;\n    //const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    useEffect(() => {\n      const taskColRef = query(collection(db, \"adventurerDB/quests\"), orderBy(\"created\", \"desc\"));\n      onSnapshot(taskColRef, snapshot => {\n        setQuest(snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n        })));\n      });\n    }, []); // useEffect(() => {\n    //   const completeRequest = axios({\n    //     method: \"post\",\n    //     url: `http://localhost:3001/complete/:${questId}`,\n    //     headers: {\n    //       Authorization: \"BEARER \" + token,\n    //     },\n    //   });\n    //   console.log(completeRequest.status);\n    // }, []);\n  };\n\n  _s(HandleSubmit, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const myQuest = quest.map(a => /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 10,\n    sx: {\n      padding: \"15px\",\n      heigth: \"400px\"\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: a.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"level \", a.userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `checkbox-${userId}`,\n        className: \"checkbox-custom\",\n        name: \"checkbox\",\n        checked: checked,\n        onChange: handleChange,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `checkbox-${userId}`,\n        className: \"checkbox-custom-label\",\n        onClick: () => setChecked(!checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 10,\n    sx: {\n      padding: \"15px\",\n      heigth: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"To complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), myQuest, /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Quests, \"cYBZEIJ4bEL2nrVn0zeWdjwz7Ck=\");\n\n_c = Quests;\nexport default Quests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quests\");","map":{"version":3,"sources":["C:/Users/1834343/Downloads/TP3/tpfinal_backend-frontend/frontend/frontend_tpfinal/src/Places/Main/Quests.js"],"names":["Paper","Typography","useEffect","Checkbox","useState","Box","Button","collection","query","orderBy","onSnapshot","doc","updateDoc","deleteDoc","db","Quests","name","completed","userId","checked","setChecked","label","inputProps","quest","setQuest","handleChange","taskDocRef","err","alert","handleDelete","HandleSubmit","taskColRef","snapshot","docs","map","id","data","myQuest","a","padding","heigth"],"mappings":"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","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  collection,\r\n  query,\r\n  orderBy,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase.js\";\r\n\r\nfunction Quests({ name, completed, userId }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n  const [quest, setQuest] = useState([]);\r\n  // const f = async () => {\r\n  //   try {\r\n  //     const questRequest = await axios({\r\n  //       method: \"get\",\r\n  //       url: \"http://localhost:3001/quests\",\r\n  //       headers: {\r\n  //         Authorization: \"BEARER \" + token,\r\n  //       },\r\n  //     });\r\n  //     setQuest(questRequest.data);\r\n  //   } catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // };\r\n  // f();\r\n  const handleChange = async () => {\r\n    const taskDocRef = doc(db, \"adventurerDB/quests\", userId);\r\n    try {\r\n      await updateDoc(taskDocRef, {\r\n        completed: checked,\r\n      });\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    const taskDocRef = doc(db, \"adventurerDB/quests\", userId);\r\n    try {\r\n      await deleteDoc(taskDocRef);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  const HandleSubmit = () => {\r\n    // questId = id;\r\n    //const data = new FormData(event.currentTarget);\r\n    // eslint-disable-next-line no-console\r\n    useEffect(() => {\r\n      const taskColRef = query(\r\n        collection(db, \"adventurerDB/quests\"),\r\n        orderBy(\"created\", \"desc\")\r\n      );\r\n      onSnapshot(taskColRef, (snapshot) => {\r\n        setQuest(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    }, []);\r\n    // useEffect(() => {\r\n    //   const completeRequest = axios({\r\n    //     method: \"post\",\r\n    //     url: `http://localhost:3001/complete/:${questId}`,\r\n    //     headers: {\r\n    //       Authorization: \"BEARER \" + token,\r\n    //     },\r\n    //   });\r\n    //   console.log(completeRequest.status);\r\n    // }, []);\r\n  };\r\n\r\n  const myQuest = quest.map((a) => (\r\n    <Paper\r\n      elevation={10}\r\n      sx={{\r\n        padding: \"15px\",\r\n        heigth: \"400px\",\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <Typography variant=\"h6\">{a.name}</Typography>\r\n      <Typography>level {a.userId}</Typography>\r\n      {/* <Button onSubmit={() => (onChange = { handleChange })} noValidate>\r\n        COMPLETE\r\n      </Button> */}\r\n      <div>\r\n        <input\r\n          id={`checkbox-${userId}`}\r\n          className=\"checkbox-custom\"\r\n          name=\"checkbox\"\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          type=\"checkbox\"\r\n        />\r\n        <label\r\n          htmlFor={`checkbox-${userId}`}\r\n          className=\"checkbox-custom-label\"\r\n          onClick={() => setChecked(!checked)}\r\n        ></label>\r\n        </div>\r\n    </Paper>\r\n  ));\r\n  return (\r\n    <Paper\r\n      elevation={10}\r\n      sx={{\r\n        padding: \"15px\",\r\n        heigth: \"400px\",\r\n      }}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h5\">To complete</Typography>\r\n        {myQuest}\r\n        <Typography variant=\"h5\">Complete</Typography>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Quests;\r\n"]},"metadata":{},"sourceType":"module"}