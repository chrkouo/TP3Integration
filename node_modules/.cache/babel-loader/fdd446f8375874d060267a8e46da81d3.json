{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1834343\\\\Downloads\\\\TP3\\\\frontend_tpfinal\\\\src\\\\Places\\\\Main\\\\Quests.js\",\n    _s = $RefreshSig$();\n\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport Button from \"@mui/material/Button\";\nimport { collection, query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\nimport { db } from \"../../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quests(props) {\n  _s();\n\n  const {\n    userId\n  } = props;\n  let completed = false;\n  const [checked, setChecked] = useState(completed);\n  const [quest, setQuest] = useState([]);\n\n  async function handleChange(id) {\n    const taskDocRef = doc(db, \"adventurerDB\", userId, \"quests\", id);\n    console.log();\n\n    try {\n      await updateDoc(taskDocRef, {\n        completed: checked\n      });\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  async function handleDelete(id) {\n    const taskDocRef = doc(db, \"adventurerDB\", userId, \"quests\", id);\n\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  useEffect(() => {\n    const taskColRef = query(collection(db, \"adventurerDB\", userId, \"quests\"), where(\"userId\", \"==\", userId));\n    console.log(taskColRef);\n    onSnapshot(taskColRef, snapshot => {\n      setQuest(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data(),\n        completed: doc.data().completed\n      })));\n    });\n  }, []);\n  console.log(quest);\n  const myQuest = quest.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      sx: {\n        padding: \"15px\",\n        heigth: \"400px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        id: a.id,\n        checked: checked,\n        label: a.data.name,\n        onClick: () => setChecked(!checked),\n        onChange: () => handleChange(a.id),\n        inputProps: {\n          \"aria-label\": \"controlled\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), a.data.name, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          id: a.id,\n          onClick: () => handleDelete(a.id),\n          variant: \"contained\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 10,\n    sx: {\n      padding: \"15px\",\n      heigth: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: myQuest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quests, \"vWTRkjOOJVwa3YPRv6b1PCDR2RY=\");\n\n_c = Quests;\nexport default Quests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quests\");","map":{"version":3,"sources":["C:/Users/1834343/Downloads/TP3/frontend_tpfinal/src/Places/Main/Quests.js"],"names":["Paper","Typography","React","useEffect","Checkbox","useState","Box","Button","collection","query","onSnapshot","doc","updateDoc","deleteDoc","where","db","Quests","props","userId","completed","checked","setChecked","quest","setQuest","handleChange","id","taskDocRef","console","log","err","alert","handleDelete","taskColRef","snapshot","docs","map","data","myQuest","a","padding","heigth","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,KAPF,QAQO,oBARP;AASA,SAASC,EAAT,QAAmB,mBAAnB;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,MAAIE,SAAS,GAAG,KAAhB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAACc,SAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AACA,iBAAemB,YAAf,CAA4BC,EAA5B,EAAgC;AAC9B,UAAMC,UAAU,GAAGf,GAAG,CAACI,EAAD,EAAK,cAAL,EAAqBG,MAArB,EAA6B,QAA7B,EAAuCO,EAAvC,CAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR;;AACA,QAAI;AACF,YAAMhB,SAAS,CAACc,UAAD,EAAa;AAC1BP,QAAAA,SAAS,EAAEC;AADe,OAAb,CAAf;AAGD,KAJD,CAIE,OAAOS,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD;AACF;;AACD,iBAAeE,YAAf,CAA4BN,EAA5B,EAAgC;AAC9B,UAAMC,UAAU,GAAGf,GAAG,CAACI,EAAD,EAAK,cAAL,EAAqBG,MAArB,EAA6B,QAA7B,EAAuCO,EAAvC,CAAtB;;AACA,QAAI;AACF,YAAMZ,SAAS,CAACa,UAAD,CAAf;AACD,KAFD,CAEE,OAAOG,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD;AACF;;AAED1B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,UAAU,GAAGvB,KAAK,CACtBD,UAAU,CAACO,EAAD,EAAK,cAAL,EAAqBG,MAArB,EAA6B,QAA7B,CADY,EAEtBJ,KAAK,CAAC,QAAD,EAAW,IAAX,EAAiBI,MAAjB,CAFiB,CAAxB;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACAtB,IAAAA,UAAU,CAACsB,UAAD,EAAcC,QAAD,IAAc;AACnCV,MAAAA,QAAQ,CACNU,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBxB,GAAD,KAAU;AAC1Bc,QAAAA,EAAE,EAAEd,GAAG,CAACc,EADkB;AAE1BW,QAAAA,IAAI,EAAEzB,GAAG,CAACyB,IAAJ,EAFoB;AAG1BjB,QAAAA,SAAS,EAAER,GAAG,CAACyB,IAAJ,GAAWjB;AAHI,OAAV,CAAlB,CADM,CAAR;AAOD,KARS,CAAV;AASD,GAfQ,EAeN,EAfM,CAAT;AAgBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,QAAMe,OAAO,GAAGf,KAAK,CAACa,GAAN,CAAWG,CAAD,iBACxB;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAE,EADb;AAEE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,MAAM,EAAE;AAFN,OAFN;AAAA,8BAOE,QAAC,QAAD;AACE,QAAA,EAAE,EAAEF,CAAC,CAACb,EADR;AAEE,QAAA,OAAO,EAAEL,OAFX;AAGE,QAAA,KAAK,EAAEkB,CAAC,CAACF,IAAF,CAAOK,IAHhB;AAIE,QAAA,OAAO,EAAE,MAAMpB,UAAU,CAAC,CAACD,OAAF,CAJ3B;AAKE,QAAA,QAAQ,EAAE,MAAMI,YAAY,CAACc,CAAC,CAACb,EAAH,CAL9B;AAME,QAAA,UAAU,EAAE;AAAE,wBAAc;AAAhB;AANd;AAAA;AAAA;AAAA;AAAA,cAPF,EAeGa,CAAC,CAACF,IAAF,CAAOK,IAfV,eAiBE;AAAA,mBACG,GADH,eAEE,QAAC,MAAD;AACE,UAAA,EAAE,EAAEH,CAAC,CAACb,EADR;AAEE,UAAA,OAAO,EAAE,MAAMM,YAAY,CAACO,CAAC,CAACb,EAAH,CAF7B;AAGE,UAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADc,CAAhB;AAkCA,sBACE,QAAC,KAAD;AACE,IAAA,SAAS,EAAE,EADb;AAEE,IAAA,EAAE,EAAE;AACFc,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,MAAM,EAAE;AAFN,KAFN;AAAA,2BAOE,QAAC,GAAD;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvFQrB,M;;KAAAA,M;AAyFT,eAAeA,MAAf","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase.js\";\r\n\r\nfunction Quests(props) {\r\n  const { userId } = props;\r\n  let completed = false;\r\n  const [checked, setChecked] = useState(completed);\r\n  const [quest, setQuest] = useState([]);\r\n  async function handleChange(id) {\r\n    const taskDocRef = doc(db, \"adventurerDB\", userId, \"quests\", id);\r\n    console.log();\r\n    try {\r\n      await updateDoc(taskDocRef, {\r\n        completed: checked,\r\n      });\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n  async function handleDelete(id) {\r\n    const taskDocRef = doc(db, \"adventurerDB\", userId, \"quests\", id);\r\n    try {\r\n      await deleteDoc(taskDocRef);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const taskColRef = query(\r\n      collection(db, \"adventurerDB\", userId, \"quests\"),\r\n      where(\"userId\", \"==\", userId)\r\n    );\r\n    console.log(taskColRef);\r\n    onSnapshot(taskColRef, (snapshot) => {\r\n      setQuest(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n          completed: doc.data().completed,\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n  console.log(quest);\r\n  const myQuest = quest.map((a) => (\r\n    <div>\r\n      <Paper\r\n        elevation={10}\r\n        sx={{\r\n          padding: \"15px\",\r\n          heigth: \"400px\",\r\n        }}\r\n      >\r\n        <Checkbox\r\n          id={a.id}\r\n          checked={checked}\r\n          label={a.data.name}\r\n          onClick={() => setChecked(!checked)}\r\n          onChange={() => handleChange(a.id)}\r\n          inputProps={{ \"aria-label\": \"controlled\" }}\r\n        ></Checkbox>\r\n        {a.data.name}\r\n\r\n        <div>\r\n          {\" \"}\r\n          <Button\r\n            id={a.id}\r\n            onClick={() => handleDelete(a.id)}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n      <br />\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Paper\r\n      elevation={10}\r\n      sx={{\r\n        padding: \"15px\",\r\n        heigth: \"400px\",\r\n      }}\r\n    >\r\n      <Box>{myQuest}</Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Quests;\r\n"]},"metadata":{},"sourceType":"module"}