{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1834343\\\\Downloads\\\\TP3\\\\frontend_tpfinal\\\\src\\\\Places\\\\Main\\\\Quests.js\",\n    _s = $RefreshSig$();\n\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect } from \"react\"; //import Checkbox from '@mui/material/Checkbox';\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\"; //import Button from \"@mui/material/Button\";\n\nimport { collection, query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\nimport { db } from \"../../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quests(props) {\n  _s();\n\n  const {\n    userId\n  } = props;\n  const [checked, setChecked] = useState(false);\n  const [quest, setQuest] = useState([]);\n\n  const handleChange = async () => {\n    const taskDocRef = query(doc(db, \"adventurerDB\", userId, \"quests\"));\n\n    try {\n      await updateDoc(taskDocRef, {\n        completed: checked\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const handleDelete = async () => {\n    const taskDocRef = query(doc(db, \"adventurerDB\", userId, \"quests\", id));\n\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  useEffect(() => {\n    const taskColRef = query(collection(db, \"adventurerDB\", userId, \"quests\"), where(\"userId\", \"==\", userId));\n    console.log(taskColRef);\n    onSnapshot(taskColRef, snapshot => {\n      setQuest(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []);\n  console.log(quest);\n  const myQuest = quest.map(a =>\n  /*#__PURE__*/\n  // <Paper\n  //   elevation={10}\n  //   sx={{\n  //     padding: \"15px\",\n  //     heigth: \"400px\",\n  //   }}\n  // >\n  //   {\" \"}\n  //   <Typography variant=\"h6\">{a.name}</Typography>\n  //   <Typography>level {a.userId}</Typography>\n  //   {/* <Button onSubmit={() => (onChange = { handleChange })} noValidate>\n  //     COMPLETE\n  //   </Button> */}\n  //   <div>\n  //     <input\n  //       id={`checkbox-${userId}`}\n  //       className=\"checkbox-custom\"\n  //       name=\"checkbox\"\n  //       checked={checked}\n  //       onChange={handleChange}\n  //       type=\"checkbox\"\n  //     />\n  //     <label\n  //       htmlFor={`checkbox-${userId}`}\n  //       className=\"checkbox-custom-label\"\n  //       onClick={() => setChecked(!checked)}\n  //     ></label>\n  //     </div>\n  // </Paper>\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `checkbox-${a.data.userId}`,\n        className: \"checkbox-custom\",\n        name: \"checkbox\",\n        checked: checked,\n        onChange: handleChange,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `checkbox-${a.data.name}`,\n        className: \"checkbox-custom-label\",\n        onClick: () => setChecked(!checked),\n        children: a.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 10,\n    sx: {\n      padding: \"15px\",\n      heigth: \"400px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: myQuest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quests, \"iuZr6PyWL0DR21Z7gcofoQPgVfE=\");\n\n_c = Quests;\nexport default Quests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quests\");","map":{"version":3,"sources":["C:/Users/1834343/Downloads/TP3/frontend_tpfinal/src/Places/Main/Quests.js"],"names":["Paper","Typography","useEffect","useState","Box","collection","query","onSnapshot","doc","updateDoc","deleteDoc","where","db","Quests","props","userId","checked","setChecked","quest","setQuest","handleChange","taskDocRef","completed","err","alert","handleDelete","id","taskColRef","console","log","snapshot","docs","map","data","myQuest","a","name","padding","heigth"],"mappings":"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","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useEffect } from \"react\";\r\n//import Checkbox from '@mui/material/Checkbox';\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\n//import Button from \"@mui/material/Button\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase.js\";\r\n\r\nfunction Quests(props) {\r\n  const { userId } = props;\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const [quest, setQuest] = useState([]);\r\n\r\n  const handleChange = async () => {\r\n    const taskDocRef = query(\r\n      doc(db, \"adventurerDB\", userId, \"quests\"),\r\n      \r\n    );\r\n    try {\r\n      await updateDoc(taskDocRef, {\r\n        completed: checked,\r\n      });\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    const taskDocRef = query(\r\n      doc(db, \"adventurerDB\", userId, \"quests\",id),\r\n      \r\n    );\r\n    try {\r\n      await deleteDoc(taskDocRef);\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const taskColRef = query(\r\n      collection(db, \"adventurerDB\", userId, \"quests\"),\r\n      where(\"userId\", \"==\", userId)\r\n    );\r\n    console.log(taskColRef);\r\n    onSnapshot(taskColRef, (snapshot) => {\r\n      setQuest(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n  console.log(quest);\r\n  const myQuest = quest.map((a) => (\r\n    // <Paper\r\n    //   elevation={10}\r\n    //   sx={{\r\n    //     padding: \"15px\",\r\n    //     heigth: \"400px\",\r\n    //   }}\r\n    // >\r\n    //   {\" \"}\r\n    //   <Typography variant=\"h6\">{a.name}</Typography>\r\n    //   <Typography>level {a.userId}</Typography>\r\n    //   {/* <Button onSubmit={() => (onChange = { handleChange })} noValidate>\r\n    //     COMPLETE\r\n    //   </Button> */}\r\n    //   <div>\r\n    //     <input\r\n    //       id={`checkbox-${userId}`}\r\n    //       className=\"checkbox-custom\"\r\n    //       name=\"checkbox\"\r\n    //       checked={checked}\r\n    //       onChange={handleChange}\r\n    //       type=\"checkbox\"\r\n    //     />\r\n    //     <label\r\n    //       htmlFor={`checkbox-${userId}`}\r\n    //       className=\"checkbox-custom-label\"\r\n    //       onClick={() => setChecked(!checked)}\r\n    //     ></label>\r\n    //     </div>\r\n    // </Paper>\r\n    <div>\r\n      <div>\r\n        <input\r\n          id={`checkbox-${a.data.userId}`}\r\n          className=\"checkbox-custom\"\r\n          name=\"checkbox\"\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          type=\"checkbox\"\r\n        />\r\n        <label\r\n          htmlFor={`checkbox-${a.data.name}`}\r\n          className=\"checkbox-custom-label\"\r\n          onClick={() => setChecked(!checked)}\r\n        >\r\n          {a.data.name}\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <div>\r\n            <button onClick={handleDelete}>Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Paper\r\n      elevation={10}\r\n      sx={{\r\n        padding: \"15px\",\r\n        heigth: \"400px\",\r\n      }}\r\n    >\r\n      <Box>{myQuest}</Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Quests;\r\n"]},"metadata":{},"sourceType":"module"}