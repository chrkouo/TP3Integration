{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1834343\\\\Downloads\\\\TP3\\\\tpfinal_backend-frontend\\\\frontend\\\\frontend_tpfinal\\\\src\\\\Places\\\\Main\\\\Quests.js\",\n    _s = $RefreshSig$();\n\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect } from \"react\"; //import Checkbox from '@mui/material/Checkbox';\n\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\"; //import Button from \"@mui/material/Button\";\n\nimport OneQuest from \"./OneQuest.js\";\nimport { collection, query, orderBy, onSnapshot, doc, updateDoc, deleteDoc } from \"firebase/firestore\";\nimport { db } from \"../../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quests() {\n  _s();\n\n  const [quests, setQuests] = useState([]);\n  useEffect(() => {\n    const taskColRef = query(collection(db, \"adventurerDB/quests\"), orderBy(\"created\", \"desc\"));\n    onSnapshot(taskColRef, snapshot => {\n      setQuest(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      })));\n    });\n  }, []); //const myQuest = quest.map((a) => (\n  // <Paper\n  //   elevation={10}\n  //   sx={{\n  //     padding: \"15px\",\n  //     heigth: \"400px\",\n  //   }}\n  // >\n  //   {\" \"}\n  //   <Typography variant=\"h6\">{a.name}</Typography>\n  //   <Typography>level {a.userId}</Typography>\n  //   {/* <Button onSubmit={() => (onChange = { handleChange })} noValidate>\n  //     COMPLETE\n  //   </Button> */}\n  //   <div>\n  //     <input\n  //       id={`checkbox-${userId}`}\n  //       className=\"checkbox-custom\"\n  //       name=\"checkbox\"\n  //       checked={checked}\n  //       onChange={handleChange}\n  //       type=\"checkbox\"\n  //     />\n  //     <label\n  //       htmlFor={`checkbox-${userId}`}\n  //       className=\"checkbox-custom-label\"\n  //       onClick={() => setChecked(!checked)}\n  //     ></label>\n  //     </div>\n  // </Paper>\n  //   <div>\n  //     <div>\n  //       <input\n  //         id={`checkbox-${a.userId}`}\n  //         className=\"checkbox-custom\"\n  //         name=\"checkbox\"\n  //         checked={checked}\n  //         onChange={handleChange}\n  //         type=\"checkbox\"\n  //       />\n  //       <label\n  //         htmlFor={`checkbox-${a.userId}`}\n  //         className=\"checkbox-custom-label\"\n  //         onClick={() => setChecked(!checked)}\n  //       ></label>\n  //     </div>\n  //     <div>\n  //       <h2>{a.name}</h2>\n  //       <div>\n  //         <div>\n  //           <button onClick={handleDelete}>Delete</button>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   </div>\n  // ));\n\n  return (\n    /*#__PURE__*/\n    // <Paper\n    //   elevation={10}\n    //   sx={{\n    //     padding: \"15px\",\n    //     heigth: \"400px\",\n    //   }}\n    // >\n    //   {myQuest}\n    // </Paper>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: quests.map(quest => /*#__PURE__*/_jsxDEV(OneQuest, {\n            name: quest.name,\n            userId: quest.userId,\n            completed: quest.data.completed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), openAddModal && /*#__PURE__*/_jsxDEV(AddTask, {\n        onClose: () => setOpenAddModal(false),\n        open: openAddModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Quests, \"kFwa3i5Zt55CQi8JYDqkl7Rewgk=\");\n\n_c = Quests;\nexport default Quests;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quests\");","map":{"version":3,"sources":["C:/Users/1834343/Downloads/TP3/tpfinal_backend-frontend/frontend/frontend_tpfinal/src/Places/Main/Quests.js"],"names":["Paper","Typography","useEffect","useState","Box","OneQuest","collection","query","orderBy","onSnapshot","doc","updateDoc","deleteDoc","db","Quests","quests","setQuests","taskColRef","snapshot","setQuest","docs","map","id","data","quest","name","userId","completed","openAddModal","setOpenAddModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,aAApB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,SAPF,QAQO,oBARP;AASA,SAASC,EAAT,QAAmB,mBAAnB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAGhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAKAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGV,KAAK,CACtBD,UAAU,CAACO,EAAD,EAAK,qBAAL,CADY,EAEtBL,OAAO,CAAC,SAAD,EAAY,MAAZ,CAFe,CAAxB;AAIAC,IAAAA,UAAU,CAACQ,UAAD,EAAcC,QAAD,IAAc;AACnCC,MAAAA,QAAQ,CACND,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBX,GAAD,KAAU;AAC1BY,QAAAA,EAAE,EAAEZ,GAAG,CAACY,EADkB;AAE1BC,QAAAA,IAAI,EAAEb,GAAG,CAACa,IAAJ;AAFoB,OAAV,CAAlB,CADM,CAAR;AAMD,KAPS,CAAV;AAQD,GAbQ,EAaN,EAbM,CAAT,CARgB,CAuBhB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,8BAEE;AAAA,+BAEE;AAAA,oBACGR,MAAM,CAACM,GAAP,CAAYG,KAAD,iBACV,QAAC,QAAD;AACE,YAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,YAAA,MAAM,EAAED,KAAK,CAACE,MAFhB;AAGE,YAAA,SAAS,EAAEF,KAAK,CAACD,IAAN,CAAWI;AAHxB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF,EAgBGC,YAAY,iBACX,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAD,CAAvC;AAAgD,QAAA,IAAI,EAAED;AAAtD;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAgCD;;GAhHQd,M;;KAAAA,M;AAkHT,eAAeA,MAAf","sourcesContent":["import Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useEffect } from \"react\";\r\n//import Checkbox from '@mui/material/Checkbox';\r\nimport { useState } from \"react\";\r\nimport { Box } from \"@mui/system\";\r\n//import Button from \"@mui/material/Button\";\r\nimport OneQuest from \"./OneQuest.js\";\r\nimport {\r\n  collection,\r\n  query,\r\n  orderBy,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../firebase.js\";\r\n\r\nfunction Quests() {\r\n  \r\n\r\n  const [quests, setQuests] = useState([]);\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const taskColRef = query(\r\n      collection(db, \"adventurerDB/quests\"),\r\n      orderBy(\"created\", \"desc\")\r\n    );\r\n    onSnapshot(taskColRef, (snapshot) => {\r\n      setQuest(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  //const myQuest = quest.map((a) => (\r\n    // <Paper\r\n    //   elevation={10}\r\n    //   sx={{\r\n    //     padding: \"15px\",\r\n    //     heigth: \"400px\",\r\n    //   }}\r\n    // >\r\n    //   {\" \"}\r\n    //   <Typography variant=\"h6\">{a.name}</Typography>\r\n    //   <Typography>level {a.userId}</Typography>\r\n    //   {/* <Button onSubmit={() => (onChange = { handleChange })} noValidate>\r\n    //     COMPLETE\r\n    //   </Button> */}\r\n    //   <div>\r\n    //     <input\r\n    //       id={`checkbox-${userId}`}\r\n    //       className=\"checkbox-custom\"\r\n    //       name=\"checkbox\"\r\n    //       checked={checked}\r\n    //       onChange={handleChange}\r\n    //       type=\"checkbox\"\r\n    //     />\r\n    //     <label\r\n    //       htmlFor={`checkbox-${userId}`}\r\n    //       className=\"checkbox-custom-label\"\r\n    //       onClick={() => setChecked(!checked)}\r\n    //     ></label>\r\n    //     </div>\r\n    // </Paper>\r\n  //   <div>\r\n  //     <div>\r\n  //       <input\r\n  //         id={`checkbox-${a.userId}`}\r\n  //         className=\"checkbox-custom\"\r\n  //         name=\"checkbox\"\r\n  //         checked={checked}\r\n  //         onChange={handleChange}\r\n  //         type=\"checkbox\"\r\n  //       />\r\n  //       <label\r\n  //         htmlFor={`checkbox-${a.userId}`}\r\n  //         className=\"checkbox-custom-label\"\r\n  //         onClick={() => setChecked(!checked)}\r\n  //       ></label>\r\n  //     </div>\r\n  //     <div>\r\n  //       <h2>{a.name}</h2>\r\n\r\n  //       <div>\r\n  //         <div>\r\n  //           <button onClick={handleDelete}>Delete</button>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // ));\r\n  return (\r\n    // <Paper\r\n    //   elevation={10}\r\n    //   sx={{\r\n    //     padding: \"15px\",\r\n    //     heigth: \"400px\",\r\n    //   }}\r\n    // >\r\n    //   {myQuest}\r\n    // </Paper>\r\n    <div >\r\n      \r\n      <div>\r\n        \r\n        <div >\r\n          {quests.map((quest) => (\r\n            <OneQuest\r\n              name={quest.name}\r\n              userId={quest.userId}\r\n              completed={quest.data.completed}\r\n              \r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {openAddModal && (\r\n        <AddTask onClose={() => setOpenAddModal(false)} open={openAddModal} />\r\n      )}\r\n    </div>\r\n  \r\n  );\r\n}\r\n\r\nexport default Quests;\r\n"]},"metadata":{},"sourceType":"module"}